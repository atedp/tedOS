{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"array_init","disambiguator":[5599657202972027270,2206220461072787913]},"crate_root":"/home/ted/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-0.0.3/src","external_crates":[{"file_name":"/home/ted/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-0.0.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5903923751799495604,8601662529811271953]}},{"file_name":"/home/ted/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-0.0.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11854383476639491665,9193229366557577764]}},{"file_name":"/home/ted/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-0.0.3/src/lib.rs","num":3,"id":{"name":"nodrop","disambiguator":[7065142556323644448,83946116699174606]}}],"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":9067,"line_start":1,"line_end":280,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":9067,"line_start":1,"line_end":280,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ted/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-0.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":40},{"krate":0,"index":48},{"krate":0,"index":56},{"krate":0,"index":64},{"krate":0,"index":72},{"krate":0,"index":80},{"krate":0,"index":88},{"krate":0,"index":96},{"krate":0,"index":104},{"krate":0,"index":112},{"krate":0,"index":120},{"krate":0,"index":128},{"krate":0,"index":136},{"krate":0,"index":144},{"krate":0,"index":152},{"krate":0,"index":160},{"krate":0,"index":168},{"krate":0,"index":176},{"krate":0,"index":184},{"krate":0,"index":192},{"krate":0,"index":200},{"krate":0,"index":208},{"krate":0,"index":216},{"krate":0,"index":224},{"krate":0,"index":232},{"krate":0,"index":240},{"krate":0,"index":248},{"krate":0,"index":256},{"krate":0,"index":264},{"krate":0,"index":272},{"krate":0,"index":280},{"krate":0,"index":288},{"krate":0,"index":296},{"krate":0,"index":304},{"krate":0,"index":312},{"krate":0,"index":320},{"krate":0,"index":328},{"krate":0,"index":336},{"krate":0,"index":344},{"krate":0,"index":352},{"krate":0,"index":360},{"krate":0,"index":368},{"krate":0,"index":376},{"krate":0,"index":384},{"krate":0,"index":392},{"krate":0,"index":400},{"krate":0,"index":408},{"krate":0,"index":416},{"krate":0,"index":424},{"krate":0,"index":432},{"krate":0,"index":440},{"krate":0,"index":448},{"krate":0,"index":456},{"krate":0,"index":464},{"krate":0,"index":472},{"krate":0,"index":480},{"krate":0,"index":488},{"krate":0,"index":496},{"krate":0,"index":504},{"krate":0,"index":512},{"krate":0,"index":520},{"krate":0,"index":528},{"krate":0,"index":536},{"krate":0,"index":544},{"krate":0,"index":552},{"krate":0,"index":560},{"krate":0,"index":568},{"krate":0,"index":576},{"krate":0,"index":584},{"krate":0,"index":592},{"krate":0,"index":600},{"krate":0,"index":608},{"krate":0,"index":616},{"krate":0,"index":624},{"krate":0,"index":632},{"krate":0,"index":640},{"krate":0,"index":648},{"krate":0,"index":656},{"krate":0,"index":664},{"krate":0,"index":672},{"krate":0,"index":680},{"krate":0,"index":688},{"krate":0,"index":696},{"krate":0,"index":704},{"krate":0,"index":712},{"krate":0,"index":720},{"krate":0,"index":728},{"krate":0,"index":736},{"krate":0,"index":744},{"krate":0,"index":752},{"krate":0,"index":760},{"krate":0,"index":768},{"krate":0,"index":776},{"krate":0,"index":784},{"krate":0,"index":792},{"krate":0,"index":800},{"krate":0,"index":808},{"krate":0,"index":816},{"krate":0,"index":824},{"krate":0,"index":832},{"krate":0,"index":840},{"krate":0,"index":848},{"krate":0,"index":856},{"krate":0,"index":864},{"krate":0,"index":872},{"krate":0,"index":880},{"krate":0,"index":888},{"krate":0,"index":896},{"krate":0,"index":904},{"krate":0,"index":912},{"krate":0,"index":920},{"krate":0,"index":928},{"krate":0,"index":936},{"krate":0,"index":944},{"krate":0,"index":952},{"krate":0,"index":960},{"krate":0,"index":968},{"krate":0,"index":976},{"krate":0,"index":984},{"krate":0,"index":992},{"krate":0,"index":1000},{"krate":0,"index":1008},{"krate":0,"index":1016},{"krate":0,"index":1024},{"krate":0,"index":1032},{"krate":0,"index":1040},{"krate":0,"index":1048},{"krate":0,"index":1056}],"decl_id":null,"docs":" The `array-vec` crate allows you to initialize arrays\n with an initializer closure that will be called\n once for each element until the array is filled.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2013,"byte_end":2020,"line_start":63,"line_end":63,"column_start":18,"column_end":25},"name":"IsArray","qualname":"::IsArray","value":"IsArray","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20}],"decl_id":null,"docs":" Trait for things which are actually arrays","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2032,"byte_end":2036,"line_start":64,"line_end":64,"column_start":10,"column_end":14},"name":"Item","qualname":"::IsArray::Item","value":"type Item;","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2088,"byte_end":2091,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"set","qualname":"::IsArray::set","value":"fn (&mut self, idx: usize, value: Self::Item) -> ()","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Must assume self is uninitialized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2142,"byte_end":2145,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"len","qualname":"::IsArray::len","value":"fn () -> usize","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3376,"byte_end":3386,"line_start":106,"line_end":106,"column_start":8,"column_end":18},"name":"array_init","qualname":"::array_init","value":"fn <Array, F> (mut initializer: F) -> Array","parent":null,"children":[],"decl_id":null,"docs":" Initialize an array given an initializer expression","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2161,"byte_end":2170,"line_start":70,"line_end":70,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4848,"byte_end":4857,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::from_iter","value":"fn <Array, I> (iter: I) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an array given an iterator","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3893,"byte_end":3902,"line_start":118,"line_end":118,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6410,"byte_end":6425,"line_start":198,"line_end":198,"column_start":8,"column_end":23},"name":"array_init_copy","qualname":"::array_init_copy","value":"fn <Array, F> (mut initializer: F) -> Array","parent":null,"children":[],"decl_id":null,"docs":" Initialize an array of `Copy` elements given an initializer expression","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5477,"byte_end":5486,"line_start":165,"line_end":165,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7586,"byte_end":7600,"line_start":231,"line_end":231,"column_start":8,"column_end":22},"name":"from_iter_copy","qualname":"::from_iter_copy","value":"fn <Array, I> (iter: I) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an array given an iterator","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,116,101,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,114,114,97,121,45,105,110,105,116,45,48,46,48,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6955,"byte_end":6964,"line_start":210,"line_end":210,"column_start":1,"column_end":10}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}